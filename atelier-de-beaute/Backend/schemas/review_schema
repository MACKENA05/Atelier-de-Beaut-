from marshmallow import Schema, fields, validate

class ReviewSchema(Schema):
    id = fields.Int(dump_only=True)
    product_id = fields.Int(required=True)
    user_id = fields.Int(required=True)
    rating = fields.Int(required=True, validate=validate.Range(min=1, max=5))
    comment = fields.Str(allow_none=True)
    created_at = fields.DateTime(dump_only=True)
    updated_at = fields.DateTime(dump_only=True)
    is_featured = fields.Boolean(dump_only=True)  # Included in responses, not in requests
    username = fields.Str(dump_only=True)  # Nested from user relationship

    # Nested fields for relationships (optional, for detailed responses)
    product = fields.Nested('ProductSchema', dump_only=True, exclude=('reviews',))
    user = fields.Nested('UserSchema', dump_only=True, exclude=('reviews',))

# Instances for serialization
review_schema = ReviewSchema()
reviews_schema = ReviewSchema(many=True)